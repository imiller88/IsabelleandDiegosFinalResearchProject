UNdata_Export_20140408_061225977.2 <- read.csv("~/Desktop/UNdata_Export_20140408_061225977 2.txt", sep=";")
View(UNdata_Export_20140408_061225977.2)
UNdata_Export_20140408_061225977.2 <- read.csv("~/Desktop/UNdata_Export_20140408_061225977 2.txt", sep=";")
View(UNdata_Export_20140408_061225977.2)
UNdata_Export_20140408_061225977.2 <- read.csv("~/Desktop/UNdata_Export_20140408_061225977 2.txt", sep=";")
View(UNdata_Export_20140408_061225977.2)
UNdata_Export_20140408_061225977.3 <- read.csv("~/Desktop/UNdata_Export_20140408_061225977 3.txt", sep=";")
View(UNdata_Export_20140408_061225977.3)
View(UNdata_Export_20140408_061225977.3)
View(UNdata_Export_20140408_061225977.3)
View(UNdata_Export_20140408_061225977.2)
View(UNdata_Export_20140408_061225977.2)
View(UNdata_Export_20140408_061225977.3)
View(UNdata_Export_20140408_061225977.2)
UNdata_Export_20140408_061225977 <- read.csv("~/Desktop/UNdata_Export_20140408_061225977.txt", sep=";")
View(UNdata_Export_20140408_061225977)
View(UNdata_Export_20140408_061225977)
View(UNdata_Export_20140408_061225977)
git config
?HairEyeColor
?USpop
?uspop
?uspop
data(uspop)
plot(uspop)
hist(uspop)
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
install.packages("knitr")
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
mean() %>%
round(digits = 1) %>%
paste(names(USArrests)[i], ., '\n') %>%
cat()
}
library(dplyr)
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
mean() %>%
round(digits = 1) %>%
paste(names(USArrests)[i], ., '\n') %>%
cat()
}
data("USArrests")
data("nhtemp")
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Savings-Per Capita GDP Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Savings-Per Capita GDP Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Assault arrests-Rape arrests Correlation") +
xlab("Assault arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
dev.print(png, "ggplotMurderAssault.png", width = 1024, height = 720)
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
dev.print(png, "ggplotMurderRape.png", width = 1024, height = 720)
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Assault arrests-Rape arrests Correlation") +
xlab("Assault arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
dev.print(png, "ggplotAssaultRape.png", width = 1024, height = 720)
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
dev.print(png, "ggplotMurderAssaultwithtitle.png", width = 1024, height = 720)
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
dev.print(png, "ggplotMurderRapewithtitle.png", width = 1024, height = 720)
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Assault arrests-Rape arrests Correlation") +
xlab("Assault arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
dev.print(png, "ggplotAssaultRapewithtitle.png", width = 1024, height = 720)
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Assault arrests-Rape arrests Correlation") +
xlab("Assault arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
cor.test(USArrests$Assault, USArrests$Rape)
summary(USArrests$Murder)
summary(USArrests$Assault)
summary(USArrests$UrbanPop)
summary(USArrests$Rape)
hist(USArrests$Murder,
main = "Arrests for Murder across US states",
ylab = "Number of US states",
xlab = "Arrests for Murder per 100k residents")
hist(USArrests$Assault,
main = "Arrests for Assault across US states",
ylab = "Number of US states",
xlab = "Arrests for Assault per 100k residents")
hist(USArrests$UrbanPop,
main = "Share of Urban Population across US states",
ylab = "Number of US states",
xlab = "Share of Urban Population (in %)")
hist(USArrests$Rape,
main = "Arrests for Rape across US states",
ylab = "Number of US states",
xlab = "Arrests for Rape per 100k residents")
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Murder, Assault)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Assault arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Assault arrests per 100k habitants")
cor.test(USArrests$Murder, USArrests$Assault)
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Murder, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Murder arrests-Rape arrests Correlation") +
xlab("Murder arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
cor.test(USArrests$Murder, USArrests$Rape)
library(ggplot2)
ggplot2::ggplot(USArrests, aes(Assault, Rape)) + geom_point() + geom_smooth() + theme_bw() + ggtitle("Assault arrests-Rape arrests Correlation") +
xlab("Assault arrests per 100k habitants") +
ylab("Rape arrests per 100k habitants")
cor.test(USArrests$Assault, USArrests$Rape)
cor.test(USArrests$Murder, USArrests$Rape)
cor.test(USArrests$Murder, USArrests$Assault)
?remove.file
?remove.files
file.remove("~/.RData")
source('~/.active-rstudio-document')
install.packages("rvest")
library(rvest)
library(dplyr)
install.packages("rvest")
library(rvest)
library(dplyr)
URL <-'http://news.bbc.co.uk/2/hi/uk_news/politics/8044207.stm'
MedalsTable <- URL %>% read_html() %>%
html_nodes('medals_table-wrapper') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('medals-table_table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table(fill = T) %>%
as.data.frame
URL <-'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
View(MedalsTable)
descending <- arrange(Totalmedals, descend(total))
head(descending) [1:26, ]
descending <- arrange(Totalmedals, descend(total))
descending <- arrange(Total, descend(Total))
descending <- arrange(descend(Total))
descending <- arrange(Country, descend(Total))
medals <- select(table, Country, Var.3, Var.4, Var.5, Total)
medals <- select(table, Country, Var.3, Var.4, Var.5, Total)
medals <- select(MedalsTable, Country, Var.3, Var.4, Var.5, Total)
names(medals) <- c("country", "gold", "silver", "bronze", "total")
medals <- arrange(medals, desc(total))
View(medals)
View(MedalsTable)
View(medals)
intall.packages("stargazer")
install.packages("stargazer")
install.packages("xtable")
install.packages("texreg")
ghit::install_github('christophergandrud/simGLM')
install_github('christophergandrud/simGLM')
devtools::install_github('christophergandrud/simGLM')
install.packages("pandoc-citeproc")
download.file("http://databank.worldbank.org/data/download/WGI_csv.zip",
temp, mode="wb")
temp2 <- tempfile()
download.file("http://databank.worldbank.org/data/download/WGI_csv.zip",
temp, mode="wb")
download.file("http://databank.worldbank.org/data/download/WGI_csv.zip",
temp2, mode="wb")
unzip(temp2, "WGI_Data.csv")
wgi_allyears <- read.table("WGI_Data.csv",
sep=",",skip=2, header=T)
install.packages("plyr")
View(wgi_allyears)
rename (wgi_allyears, c("Afghanistan"="cname"))
library(plyr)
rename (wgi_allyears, c("Afghanistan"="cname"))
View(wgi_allyears)
library(wgi_allyears)
install_packages ("WDI")
install.packages("WDI")
install.packages("WGI")
library(WDI)
Gini <- WDI(indicator= "SI.POV.GINI")
View(Gini)
WGI_Data <- read.csv("~/GitHub/IsabelleandDiegosFinalResearchProject/Assignment3/WGI_Data.csv")
View(WGI_Data)
CombinedVars <- read.csv("~/GitHub/IsabelleandDiegosFinalResearchProject/Assignment3/CombinedVars.csv")
View(CombinedVars)
View(CombinedVars)
install.packages("rworldmap")
install.packages ("maptools")
install.packages ("maptools")
install.packages ("ggmap")
install.packages ("sp")
install.packages ("stargazer")
library(plm)
#setting data as panel data
CombinedVars <- plm.data(CombinedVars, index=c("cname", "year"))
#linear regression with freedom of the press as DV
M1 <- lm(pressfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars)
summary(M1)
#linear regression with alternative DV - freedom of association and organization
M2 <- lm(orgassfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars)
summary(M2)
library(plm)
#1. Setting working directory for both computers
getwd
try(setwd("/Users/Diegotab/GitHub/IsabelleandDiegosFinalResearchProject/Assignment3"), silent = TRUE)
try(setwd("/Users/isabellemiller/GitHub/IsabelleandDiegosFinalResearchProject/Assignment3"), silent =TRUE)
#1. Gathering data from Quality of Government Standard Dataset
URL <- 'http://www.qogdata.pol.gu.se/data/qog_std_ts_jan16.csv'
temp <- tempfile()
download.file(URL, temp)
QoGData <- read.csv(gzfile(temp, "qog_std_ts_jan16.csv"))
unlink (temp)
#2.Gathering WGI data
download.file("http://databank.worldbank.org/data/download/WGI_csv.zip",
temp, mode="wb")
unzip(temp, "WGI_Data.csv")
wgi_allyears <- read.table("WGI_Data.csv",
sep=",",skip=2, header=T)
unlink (temp)
#3. Gathering WDI data (package)
library (WDI)
Gini <- WDI(indicator="SI.POV.GINI")
GDPcapita <- WDI(indicator="NY.GDP.PCAP.CD")
####CLEAN & RESHAPE DATASET FOR MERGE: voice and accountability variable (world governance indicators)
#create new dataset omitting years 1996, 1998, 2000
wgi <- wgi_allyears[c(1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20)] #keep columns
wgi <- wgi[-c(2)] #remove country code
wgi <- data.frame(wgi)
#rename columns
library(dplyr)
head(wgi[, 1:2])
colnames(wgi)[1] <- "cname"
colnames(wgi)[2] <- "variable"
colnames(wgi)[3] <- "variablecode"
colnames(wgi)[4] <- "2002"
colnames(wgi)[5] <- "2003"
colnames(wgi)[6] <- "2004"
colnames(wgi)[7] <- "2005"
colnames(wgi)[8] <- "2006"
colnames(wgi)[9] <- "2007"
colnames(wgi)[10] <- "2008"
colnames(wgi)[11] <- "2009"
colnames(wgi)[12] <- "2010"
colnames(wgi)[13] <- "2011"
colnames(wgi)[14] <- "2012"
colnames(wgi)[15] <- "2013"
colnames(wgi)[16] <- "2014"
#select variable of interest (voice and accountability)
voiceandacc <- filter(wgi,wgi$variablecode == "VA.EST") #select out voice and accountability
##RESHAPING
# "long" format - data frame columns are variables and rows are specific observations
# reshape from "wide" to "long" format using tidyr package
library("tidyr")
head(voiceandacc[,1:5])
#create 2 new columns: year (key) and est (value) ; cname identifies subject - do not gather!
#therefore gather only columns 4-16
gatheredest <- gather(voiceandacc, year, est, 4:16)
gatheredest <- gatheredest[-c(2,3)] #variable and variable code are redundant
head(gatheredest)
colnames(gatheredest)[3] <- "VoiceandAccountability"
gatheredest <- gatheredest[order(gatheredest$cname,
gatheredest$year), ] #order by country code before year
#Assign iso2c codes from country.name
library(countrycode)
gatheredest$iso2c <- countrycode(gatheredest$cname, origin = 'country.name',
destination = 'iso2c', warn = TRUE) #Kosovo not matched
####CLEAN & RESHAPE DATASET FOR MERGE: GDP per capita & GINI
GDPccapita <- GDPcapita[-c(1:238),] #eliminating regional values
colnames(GDPccapita)[3] <- "GDPpercapita"
colnames(GDPccapita)[2] <- "cname"
GDPccapita <- GDPccapita[order(GDPccapita$cname,
GDPccapita$year), ] #order by country code before year
Ginic <- Gini[-c(1:238),] #eliminating regional values
colnames(Ginic)[3] <- "Ginicoef"
colnames(Ginic)[2] <- "cname"
Ginic <- Ginic[order(Ginic$cname,
Ginic$year), ]
####CLEAN AND RESHAPE DATASET FOR MERGE: quality of governance variables
#Deleting countries that appear in the dataset but do not exist anymore, e.g.: East Germany, USSR
QoGData <- QoGData[-c(14281:14350, 11621:11690, 13931:14000, 3221:3290, 14631:14770, 14351:14420,
14421:14490, 14071:14140, 13231:13300, 4691:4830, 11761:11970),]
#Countries deleted: France(-1962), Yemen South, Yemen North, Vietnam, Czechoslovaquia, Vietnam North,
#Vietnam South, Malaysia (-1965), Cyprus (-1974), Yugoslavia, USSR, East Germany, West Germany, Sudan
QoGDatareduced <- subset(QoGData, year>2001 & year<2015, select=c("cname", "year", "fh_aor",
"fh_fotpsc", "al_ethnic",
"al_language", "wef_ji"))
#Assign iso2codes from country.name
QoGDatareduced$iso2c <- countrycode(QoGDatareduced$cname, origin = 'country.name',
destination = 'iso2c', warn = TRUE)
#Serbia and Montenegro, Tibet not matched
#rename variables - make sure dplyr is loaded (but not plyr)
QoGDatareduced <- rename  (QoGDatareduced,
orgassfreedom = fh_aor,
pressfreedom = fh_fotpsc,
ethnicfrac = al_ethnic,
langfrac = al_language,
judindep = wef_ji)
#columns must have the same name and be in the same order for merging
Ginic <- Ginic[c("iso2c", "cname", "year", "Ginicoef")] #reordering
GDPccapita <- GDPccapita[c("iso2c", "cname", "year", "GDPpercapita")] #reordering
WDIcombined <- merge(Ginic, GDPccapita,by=c("iso2c","year","cname"), all = TRUE)
gatheredest <- gatheredest[c("iso2c", "cname", "year", "VoiceandAccountability")] #reordering
#reorder
QoGDatareduced <- QoGDatareduced[c("iso2c", "cname", "year", "orgassfreedom", "pressfreedom",
"ethnicfrac", "langfrac", "judindep")]
#combine WDI and VoiceandAccountability
CombinedVars <- merge(WDIcombined, gatheredest,by=c("iso2c","year","cname"), all = TRUE)
#Combine all - ONLY RUN ONCE or it duplicates variables
CombinedVars <- merge(CombinedVars, QoGDatareduced,by=c("iso2c","year","cname"), all = TRUE)
#eliminating countries that appear twice with different names, small islands that have no values for
#any of the variables...
CombinedVars <- CombinedVars[-c(651:709, 827:852, 879:917, 944:969, 977:1002, 1094:1119, 1348:1373,
2345:2383, 2312:2318, 326:351, 378:403, 469:494, 508:533, 2234:2259,
3250:3288, 3178:3210, 3074:3125, 2970:2995, 2820:2826, 2774:2806,
2644:2669, 2514:2539, 2091:2116, 2143:2155, 1993:2012, 1915:1940,
1882:1888, 1661:1686, 1563:1621, 1472:1497, 2592:2604, 2735:2747),]
####POST-MERGE CLEANING
#reorder to put dependent variables first
CombinedVars <- CombinedVars[c("iso2c", "cname", "year", "pressfreedom", "orgassfreedom", "ethnicfrac",
"Ginicoef", "GDPpercapita", "VoiceandAccountability", "langfrac",
"judindep")]
#check NAs for each variable
#drop NAs for pressfreedom and ethnicfrac
colSums(is.na(CombinedVars))
CombinedVars2 <- CombinedVars[!is.na(CombinedVars$pressfreedom), ] #omit NAs just for that variable
#creates a new vector that omits all rows for which it is not TRUE
CombinedVars2 <- CombinedVars2[!is.na(CombinedVars2$ethnicfrac), ]
#code year as numeric
CombinedVars2$year <- as.numeric(as.character(CombinedVars$year))
#code as panel data
CombinedVars2 <- plm.data(CombinedVars2, index=c("cname", "year"))
#Create Excel sheet with final dataset
write.csv(CombinedVars2, file="FinalDataset.csv")
library(plm)
CombinedVars2 <- plm.data(CombinedVars2, index=c("cname", "year"))
M1 <- lm(pressfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars2)
summary(M1)
#linear regression with alternative DV - freedom of association and organization
M2 <- lm(orgassfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars2)
summary(M2)
stargazer::stargazer(M1, M2, covariate.labels = labels,
title = 'OLS regressions',
digits = 2, type = 'latex', header = FALSE)
stargazer::stargazer(M1, M2, covariate.labels = NULL,
title = 'OLS regressions',
digits = 2, type = 'latex', header = FALSE)
#setting data as panel data
CombinedVars2 <- plm.data(CombinedVars2, index=c("cname", "year"))
#linear regression with freedom of the press as DV
M1 <- lm(pressfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars2)
summary(M1)
#linear regression with alternative DV - freedom of association and organization
M2 <- lm(orgassfreedom ~ ethnicfrac + Ginicoef + GDPpercapita + VoiceandAccountability + judindep + langfrac , data = CombinedVars2)
summary(M2)
stargazer::stargazer(M1, M2, covariate.labels = NULL,
title = 'OLS regressions',
digits = 2, type = 'latex', header = FALSE)
View(CombinedVars2)
install.packages("textreg")
install.packages("texreg")
install.packages("apsrtable")
write.csv(CombinedVars2, file="FinalDataset.csv")
